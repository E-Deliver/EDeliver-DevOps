name: CI/CD Pipeline for Backend of E-Deliver App

on:
  push:
    branches: ["main"]
    paths:
      - EDeliver-backend/**
      - docker/backend/**
      - 'docker-compose.yml'
      - .github/workflows/*-backend.yml
  pull_request:
    branches: ["main"]
    paths:
      - EDeliver-backend/**
      - docker/backend/**
      - 'docker-compose.yml'
      - .github/workflows/*-backend.yml

jobs:
  Compile:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Compile Backend App
        run: |
          cd EDeliver-backend
          mvn clean compile -DskipTests=true

  Build:
    runs-on: ubuntu-latest
    needs: [Compile]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build Backend App
        run: |
          cd EDeliver-backend
          mvn clean package -DskipTests=true
        
  Build-Push-Docker-Image:
    name: Build & push Docker Image of UAT environment for Backend App
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Extract project version
        id:  extract_version
        run: |
          cd EDeliver-backend
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          if [ -z "$VERSION" ]; then
            VERSION="latest"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: edeliver-backend
          file: docker/backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKER_USERNAME }}/edeliver-backend:${{ steps.extract_version.outputs.VERSION }}, ${{ secrets.DOCKER_USERNAME }}/edeliver-backend:uat
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
